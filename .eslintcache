[{"C:\\Users\\Garima\\Desktop\\robofriends\\src\\index.js":"1","C:\\Users\\Garima\\Desktop\\robofriends\\src\\reportWebVitals.js":"2","C:\\Users\\Garima\\Desktop\\robofriends\\src\\Card.js":"3","C:\\Users\\Garima\\desktop\\robofriends\\src\\index.js":"4","C:\\Users\\Garima\\desktop\\robofriends\\src\\Card.js":"5","C:\\Users\\Garima\\desktop\\robofriends\\src\\reportWebVitals.js":"6","C:\\Users\\Garima\\desktop\\robofriends\\src\\robots.js":"7","C:\\Users\\Garima\\desktop\\robofriends\\src\\CardList.js":"8","C:\\Users\\Garima\\desktop\\robofriends\\src\\App.js":"9","C:\\Users\\Garima\\desktop\\robofriends\\src\\SearchBox.js":"10","C:\\Users\\Garima\\desktop\\robofriends\\src\\Scroll.js":"11"},{"size":496,"mtime":1608232126625,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":224,"mtime":1608232197275,"results":"15","hashOfConfig":"13"},{"size":527,"mtime":1608834142906,"results":"16","hashOfConfig":"17"},{"size":413,"mtime":1608817519636,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":1161,"mtime":1583358564000,"results":"20","hashOfConfig":"17"},{"size":645,"mtime":1608833865507,"results":"21","hashOfConfig":"17"},{"size":1414,"mtime":1608842885468,"results":"22","hashOfConfig":"17"},{"size":315,"mtime":1608838622255,"results":"23","hashOfConfig":"17"},{"size":192,"mtime":1608842509128,"results":"24","hashOfConfig":"17"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1pdlrn2",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},"7svu7v",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Garima\\Desktop\\robofriends\\src\\index.js",["51"],"C:\\Users\\Garima\\Desktop\\robofriends\\src\\reportWebVitals.js",[],"C:\\Users\\Garima\\Desktop\\robofriends\\src\\Card.js",["52"],"C:\\Users\\Garima\\desktop\\robofriends\\src\\index.js",["53","54"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Card from './Card';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport {robots} from './robots';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["55","56"],"C:\\Users\\Garima\\desktop\\robofriends\\src\\Card.js",[],"C:\\Users\\Garima\\desktop\\robofriends\\src\\reportWebVitals.js",[],"C:\\Users\\Garima\\desktop\\robofriends\\src\\robots.js",[],"C:\\Users\\Garima\\desktop\\robofriends\\src\\CardList.js",["57"],"import React from 'react';\r\nimport Card from './Card';\r\nimport {robots} from './robots';\r\n\r\n\r\n//destructuring and instead of using props, we directly pass the array in js form\r\n//syntax of map first includes current-value(user) and then index (i)\r\n//it's good to include a key everytime we use a loop in react to make things easy for th dom\r\nconst CardList=({ robots })=> {\r\n\tconst cardComponent = robots.map((user, i) => {\r\n\t\treturn (\r\n\t\t\t<Card \r\n\t\t\t\tkey={i} \r\n\t\t\t\tid={robots[i].id} \r\n\t\t\t\tname={robots[i].name} \r\n\t\t\t\temail={robots[i].email}\r\n\t\t\t/>\r\n\t\t);\r\n\t})\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{cardComponent}\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default CardList;","C:\\Users\\Garima\\desktop\\robofriends\\src\\App.js",["58"],"import React , { Component } from \"react\";\r\nimport CardList from \"./CardList\";\r\nimport { robots } from \"./robots\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport \"./App.css\"\r\nimport Scroll from \"./Scroll\";\r\n\r\n//STATE is basically an object that describes your app\r\n//here robots and searchbox will change and impact the state\r\n\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(users => {\r\n\t\t\tthis.setState({robots:users})\r\n\t\t}) \r\n\t}\r\n\r\n//use the arrow type functions so that your when you use 'this' it knows that it's from the place where the method is created (App)\r\n//use setState instead of this.set.state\t\r\n\tonSearchChange = (event) => {\r\n\t\t\t\tthis.setState({searchfield: event.target.value})\r\n\r\n\t} \r\n\r\n\trender() {\r\n\t\t\t\tconst filteredRobots = this.state.robots.filter(robot => {\r\n\t\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t\t})\r\n\t\tif(!this.state.robots.length){\r\n\t\t\treturn <h1>Loading</h1>\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn(\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t\t<Scroll>\t\r\n\t\t\t\t\t\t<CardList robots={filteredRobots} />\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport default App;","C:\\Users\\Garima\\desktop\\robofriends\\src\\SearchBox.js",[],"C:\\Users\\Garima\\desktop\\robofriends\\src\\Scroll.js",[],{"ruleId":"59","severity":1,"message":"60","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":11},{"ruleId":"63","severity":1,"message":"64","line":6,"column":2,"nodeType":"65","messageId":"66","endLine":14,"endColumn":4},{"ruleId":"59","severity":1,"message":"67","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":12},{"ruleId":"59","severity":1,"message":"68","line":8,"column":9,"nodeType":"61","messageId":"62","endLine":8,"endColumn":15},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"59","severity":1,"message":"68","line":3,"column":9,"nodeType":"61","messageId":"62","endLine":3,"endColumn":15},{"ruleId":"59","severity":1,"message":"68","line":3,"column":10,"nodeType":"61","messageId":"62","endLine":3,"endColumn":16},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'Card' is defined but never used.","'robots' is defined but never used.","no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-global-assign","no-unsafe-negation"]